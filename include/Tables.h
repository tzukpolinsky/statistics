//
// Created by tzuk on 6/18/23.
//

#ifndef STATISTICS_TABLES_H
#define STATISTICS_TABLES_H

inline std::map<double, double> createZTable() {
    return std::map<double, double>{{0.500,  0.00},
                                    {0.505,  0.01},
                                    {0.510,  0.03},
                                    {0.515,  0.04},
                                    {0.520,  0.06},
                                    {0.525,  0.07},
                                    {0.530,  0.08},
                                    {0.535,  0.10},
                                    {0.540,  0.11},
                                    {0.545,  0.12},
                                    {0.550,  0.14},
                                    {0.555,  0.15},
                                    {0.560,  0.16},
                                    {0.565,  0.17},
                                    {0.570,  0.18},
                                    {0.575,  0.19},
                                    {0.580,  0.20},
                                    {0.585,  0.22},
                                    {0.590,  0.23},
                                    {0.595,  0.24},
                                    {0.600,  0.25},
                                    {0.605,  0.26},
                                    {0.610,  0.27},
                                    {0.615,  0.28},
                                    {0.620,  0.29},
                                    {0.625,  0.31},
                                    {0.630,  0.32},
                                    {0.635,  0.33},
                                    {0.640,  0.34},
                                    {0.645,  0.35},
                                    {0.650,  0.36},
                                    {0.655,  0.38},
                                    {0.660,  0.39},
                                    {0.665,  0.40},
                                    {0.670,  0.41},
                                    {0.675,  0.42},
                                    {0.680,  0.43},
                                    {0.685,  0.45},
                                    {0.690,  0.46},
                                    {0.695,  0.47},
                                    {0.700,  0.52},
                                    {0.705,  0.54},
                                    {0.710,  0.55},
                                    {0.715,  0.58},
                                    {0.720,  0.59},
                                    {0.725,  0.61},
                                    {0.730,  0.62},
                                    {0.735,  0.64},
                                    {0.740,  0.65},
                                    {0.745,  0.66},
                                    {0.750,  0.67},
                                    {0.7500, 0.6745},
                                    {0.7550, 0.6810},
                                    {0.7600, 0.6874},
                                    {0.7650, 0.6939},
                                    {0.7700, 0.7004},
                                    {0.7750, 0.7070},
                                    {0.7800, 0.7136},
                                    {0.7850, 0.7202},
                                    {0.7900, 0.7269},
                                    {0.7950, 0.7336},
                                    {0.8000, 0.8406},
                                    {0.8050, 0.8476},
                                    {0.8100, 0.8545},
                                    {0.8150, 0.8614},
                                    {0.8200, 0.8686},
                                    {0.8250, 0.8759},
                                    {0.8300, 0.8832},
                                    {0.8350, 0.8907},
                                    {0.8400, 0.8981},
                                    {0.8450, 0.9057},
                                    {0.8500, 1.0364},
                                    {0.8550, 1.0442},
                                    {0.8600, 1.0520},
                                    {0.8650, 1.0599},
                                    {0.8700, 1.0679},
                                    {0.8750, 1.0760},
                                    {0.8800, 1.0842},
                                    {0.8850, 1.0925},
                                    {0.8900, 1.1010},
                                    {0.8950, 1.1097},
                                    {0.9000, 1.2816},
                                    {0.9050, 1.2908},
                                    {0.9100, 1.3002},
                                    {0.9150, 1.3098},
                                    {0.9200, 1.3196},
                                    {0.9250, 1.3296},
                                    {0.9300, 1.3399},
                                    {0.9350, 1.3504},
                                    {0.9400, 1.3612},
                                    {0.9450, 1.3723},
                                    {0.9500, 1.6449},
                                    {0.9550, 1.6567},
                                    {0.9600, 1.6689},
                                    {0.9650, 1.6815},
                                    {0.9700, 1.6944},
                                    {0.9750, 1.7080},
                                    {0.9800, 2.0537},
                                    {0.9850, 2.0697},
                                    {0.9900, 2.3263},
                                    {0.9950, 2.5760}};
}

inline std::pair<std::map<double, std::map<int, double>>, std::map<double, std::map<int, double>>> createTTable() {
    std::pair<std::map<double, std::map<int, double>>, std::map<double, std::map<int, double>>> tTableScore;
    tTableScore.first[0.1] = {{1,  3.078},
                              {2,  1.886},
                              {3,  1.638},
                              {4,  1.533},
                              {5,  1.476},
                              {6,  1.440},
                              {7,  1.415},
                              {8,  1.397},
                              {9,  1.383},
                              {10, 1.372},
                              {11, 1.363},
                              {12, 1.356},
                              {13, 1.350},
                              {14, 1.345},
                              {15, 1.341},
                              {16, 1.337},
                              {17, 1.333},
                              {18, 1.330},
                              {19, 1.328},
                              {20, 1.325},
                              {21, 1.323},
                              {22, 1.321},
                              {23, 1.319},
                              {24, 1.318},
                              {25, 1.316},
                              {26, 1.315},
                              {27, 1.314},
                              {28, 1.313},
                              {29, 1.311},
                              {30, 1.310}};
    tTableScore.first[0.05] = {{1,  6.314},
                               {2,  2.920},
                               {3,  2.353},
                               {4,  2.132},
                               {5,  2.015},
                               {6,  1.943},
                               {7,  1.895},
                               {8,  1.860},
                               {9,  1.833},
                               {10, 1.812},
                               {11, 1.796},
                               {12, 1.782},
                               {13, 1.771},
                               {14, 1.761},
                               {15, 1.753},
                               {16, 1.746},
                               {17, 1.740},
                               {18, 1.734},
                               {19, 1.729},
                               {20, 1.725},
                               {21, 1.721},
                               {22, 1.717},
                               {23, 1.714},
                               {24, 1.711},
                               {25, 1.708},
                               {26, 1.706},
                               {27, 1.703},
                               {28, 1.701},
                               {29, 1.699},
                               {30, 1.697}};
    tTableScore.first[0.025] = {{1,  12.706},
                                {2,  4.303},
                                {3,  3.182},
                                {4,  2.776},
                                {5,  2.571},
                                {6,  2.447},
                                {7,  2.365},
                                {8,  2.306},
                                {9,  2.262},
                                {10, 2.228},
                                {11, 2.201},
                                {12, 2.179},
                                {13, 2.160},
                                {14, 2.145},
                                {15, 2.131},
                                {16, 2.120},
                                {17, 2.110},
                                {18, 2.101},
                                {19, 2.093},
                                {20, 2.086},
                                {21, 2.080},
                                {22, 2.074},
                                {23, 2.069},
                                {24, 2.064},
                                {25, 2.060},
                                {26, 2.056},
                                {27, 2.052},
                                {28, 2.048},
                                {29, 2.045},
                                {30, 2.042}};
    tTableScore.first[0.01] = {{1,  31.821},
                               {2,  6.965},
                               {3,  4.541},
                               {4,  3.747},
                               {5,  3.365},
                               {6,  3.143},
                               {7,  2.998},
                               {8,  2.896},
                               {9,  2.821},
                               {10, 2.764},
                               {11, 2.718},
                               {12, 2.681},
                               {13, 2.650},
                               {14, 2.624},
                               {15, 2.602},
                               {16, 2.583},
                               {17, 2.567},
                               {18, 2.552},
                               {19, 2.539},
                               {20, 2.528},
                               {21, 2.518},
                               {22, 2.508},
                               {23, 2.500},
                               {24, 2.492},
                               {25, 2.485},
                               {26, 2.479},
                               {27, 2.473},
                               {28, 2.467},
                               {29, 2.462},
                               {30, 2.457}};
    tTableScore.first[0.005] = {{1,  63.657},
                                {2,  9.925},
                                {3,  5.841},
                                {4,  4.604},
                                {5,  4.032},
                                {6,  3.707},
                                {7,  3.499},
                                {8,  3.355},
                                {9,  3.250},
                                {10, 3.169},
                                {11, 3.106},
                                {12, 3.055},
                                {13, 3.012},
                                {14, 2.977},
                                {15, 2.947},
                                {16, 2.921},
                                {17, 2.898},
                                {18, 2.878},
                                {19, 2.861},
                                {20, 2.845},
                                {21, 2.831},
                                {22, 2.819},
                                {23, 2.807},
                                {24, 2.797},
                                {25, 2.787},
                                {26, 2.779},
                                {27, 2.771},
                                {28, 2.763},
                                {29, 2.756},
                                {30, 2.750}};
    tTableScore.first[0.1].insert({{40,                              1.303},
                                   {50,                              1.299},
                                   {60,                              1.296},
                                   {70,                              1.294},
                                   {80,                              1.292},
                                   {90,                              1.291},
                                   {100,                             1.290},
                                   {110,                             1.289},
                                   {120,                             1.289},
                                   {std::numeric_limits<int>::max(), 1.282}});
    tTableScore.first[0.05].insert({{40,                              1.684},
                                    {50,                              1.676},
                                    {60,                              1.671},
                                    {70,                              1.667},
                                    {80,                              1.664},
                                    {90,                              1.662},
                                    {100,                             1.660},
                                    {110,                             1.659},
                                    {120,                             1.658},
                                    {std::numeric_limits<int>::max(), 1.645}});
    tTableScore.first[0.025].insert({{40,                              2.021},
                                     {50,                              2.009},
                                     {60,                              2.000},
                                     {70,                              1.994},
                                     {80,                              1.990},
                                     {90,                              1.987},
                                     {100,                             1.984},
                                     {110,                             1.982},
                                     {120,                             1.980},
                                     {std::numeric_limits<int>::max(), 1.960}});
    tTableScore.first[0.01].insert({{40,                              2.423},
                                    {50,                              2.403},
                                    {60,                              2.390},
                                    {70,                              2.381},
                                    {80,                              2.374},
                                    {90,                              2.368},
                                    {100,                             2.364},
                                    {110,                             2.360},
                                    {120,                             2.358},
                                    {std::numeric_limits<int>::max(), 2.326}});
    tTableScore.first[0.005].insert({{40,                              2.704},
                                     {50,                              2.678},
                                     {60,                              2.660},
                                     {70,                              2.648},
                                     {80,                              2.639},
                                     {90,                              2.632},
                                     {100,                             2.626},
                                     {110,                             2.621},
                                     {120,                             2.617},
                                     {std::numeric_limits<int>::max(), 2.576}});

// For two-sided test
// Note that the two-sided test is simply double the one-sided test, so we use the same values.
    for (auto &[confidenceLevel, map]: tTableScore.first) {
        tTableScore.second[confidenceLevel * 2] = map;
    }
}

#endif //STATISTICS_TABLES_H
